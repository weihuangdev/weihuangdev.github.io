sc.textFile(inDir).map { str =>
            val person = parseString(str.split(','), urlSink.value)
            Person.getMainId(person) -> person
        }.filter(
            p => p._1 != ""
        ).reduceByKey(
            Person.merge
        ).repartition(500).map {
            case (id, person) => redisSink.value.getId(id) -> person
        }.reduceByKey(
            Person.merge
        )

```
sc.textFile(inDir).map { str =>
    ...
}.filter(
    ...
).reduceByKey(
    ...
).repartition(500)
).map { case (id, person) =>
    ...
}.reduceByKey(
    ...
).foreach { case (id, person) =>
    ...
}
```