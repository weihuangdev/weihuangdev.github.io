---
layout: post
title:  "mongo day 2 (docker mongo)"
date:   2018-10-09 11:44:17 +0800
categories: mongo
---



```
docker pull mongo
```

```
cd /Users/daniel/mongo-docker
touch docker-compose.yml
```

docker-compose.yml 內容 :  
```
# Use root/example as user/password credentials
version: '3.1'

services:

  mongo:
    image: mongo
    restart: always
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: 123456
    volumes:
      - /Users/daniel/mongo-docker/data


  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: 123456
```
執行 docker-compose up

```
docker-compose up
```


Mongo Express 網址 (http://localhost:8081/)  

![mongo-day2_1.jpg]({{ "/assets/mongo/day2/mongo-day2_1.jpg" | absolute_url }})

```
docker exec -it mongo-docker_mongo_1 bash
```
連進 mongo shell

```
mongo --host 127.0.0.1:27017
```


下載 gopkg.in/mgo.v2 套件
```
go get gopkg.in/mgo.v2
```
go get 一開始不行，因為忘記 source  

```
source ~/.bash_profile
daniel@Danielde-MBP > go get gopkg.in/mgo.v2
```





```
package main

import (
  "fmt"

  "gopkg.in/mgo.v2"
)

type User struct {
  Name string "bson:`name`"
  Age  int    "bson:`age`"
}

func main() {
  var mydb = getDB()
  mydb.Login("root", "123456")
  c := mydb.C("student")
  err := c.Insert(&User{Name: "Daniel", Age: 30})
  if err != nil {
    panic(err)
  }
  fmt.Println(err)
}

func getDB() *mgo.Database {
  session, err := mgo.Dial("127.0.0.1:27017")
  if err != nil {
    panic(err)
  }

  session.SetMode(mgo.Monotonic, true)
  db := session.DB("test")
  return db
}

```


> 參考資料  
> [mongo docker](https://hub.docker.com/_/mongo/)